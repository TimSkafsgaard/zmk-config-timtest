#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>



/ {
	macros {
        hello_world: hello_world {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <
                &macro_tap &kp H
                &macro_tap &kp E
                &macro_tap &kp L
                &macro_tap &kp L
                &macro_tap &kp O
                &macro_tap &kp SPACE
                &macro_tap &kp LCTRL
                &macro_tap &kp W
                &macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp L
                &macro_tap &kp D
            >;
        };

        good_morning: good_morning {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <
                &macro_tap &kp G
                &macro_tap &kp O
                &macro_tap &kp O
                &macro_tap &kp D
                &macro_tap &kp SPACE
                &macro_tap &kp LCTRL
                &macro_tap &kp M
                &macro_tap &kp O
                &macro_tap &kp R
                &macro_tap &kp N
                &macro_tap &kp I
                &macro_tap &kp N
                &macro_tap &kp G
            >;
        };

        zmk_rules: zmk_rules {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <
                &macro_tap &kp Z
                &macro_tap &kp M
                &macro_tap &kp K
                &macro_tap &kp SPACE
                &macro_tap &kp LCTRL
                &macro_tap &kp R
                &macro_tap &kp U
                &macro_tap &kp L
                &macro_tap &kp E
                &macro_tap &kp S
            >;
        };

        typing_test: typing_test {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <
                &macro_tap &kp T
                &macro_tap &kp Y
                &macro_tap &kp P
                &macro_tap &kp I
                &macro_tap &kp N
                &macro_tap &kp G
                &macro_tap &kp SPACE
                &macro_tap &kp LCTRL
                &macro_tap &kp T
                &macro_tap &kp E
                &macro_tap &kp S
                &macro_tap &kp T
            >;
        };

        macro_magic: macro_magic {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <
                &macro_tap &kp M
                &macro_tap &kp A
                &macro_tap &kp C
                &macro_tap &kp R
                &macro_tap &kp O
                &macro_tap &kp SPACE
                &macro_tap &kp LCTRL
                &macro_tap &kp M
                &macro_tap &kp A
                &macro_tap &kp G
                &macro_tap &kp I
                &macro_tap &kp C
            >;
        };

        test_phrase: test_phrase {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <
                &macro_tap &kp T
                &macro_tap &kp E
                &macro_tap &kp S
                &macro_tap &kp T
                &macro_tap &kp SPACE
                &macro_tap &kp LCTRL
                &macro_tap &kp P
                &macro_tap &kp H
                &macro_tap &kp R
                &macro_tap &kp A
                &macro_tap &kp S
                &macro_tap &kp E
            >;
        };

		launch_balatro: launch_balatro {
    		compatible = "zmk,behavior-macro";
    		#binding-cells = <0>;
    		bindings = <
				&macro_tap &kp LCTRL
				&macro_tap &kp LALT
				&macro_tap &kp H
    >;
};
    };
	
	keymap {
		compatible = "zmk,keymap";

		base {
			display-name = "KeypadBase";
			bindings = <
				&kp KP_N7  &kp KP_N8  &kp KP_N9
				&kp KP_N4  &kp KP_N5  &kp KP_N6
				&kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_N0
			>;
		};

		bt_layer {
			display-name = "Bluetooth";
			bindings = <
				&none &none &none
				&none &none &none
				&bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR
			>;
		};

		media_layer {
			display-name = "MediaControls";
			bindings = <
				&kp C_PREV &kp C_PLAY_PAUSE &kp C_NEXT
				&kp C_VOLUME_DOWN &kp C_MUTE &kp C_VOLUME_UP
				&kp LC(C) &kp LC(V) &kp LC(X) &none
			>;
		};

		fkeys_layer {
			display-name = "FKeys";
			bindings = <
				&kp F13 &kp F14 &kp F15
				&kp F16 &kp F17 &kp F18
				&kp F19 &kp F20 &kp F21 &kp F22
			>;
		};

		macro_layer1 {
			display-name = "Macros 1";
			bindings = <
				&hello_world &good_morning &zmk_rules
				&typing_test &macro_magic &test_phrase
				&none &none &none &launch_balatro
			>;
		};

		layer6 {
			display-name = "Layer6";
			bindings = <
				&none &none &none
				&none &none &none
				&none &none &none &none
			>;
		};
	};

	combos {
		compatible = "zmk,combos";
		combo_base: combo_base { timeout-ms = <150>; key-positions = <0 9>; bindings = <&to 0>; };
		combo_bt: combo_bt { timeout-ms = <150>; key-positions = <1 9>; bindings = <&to 1>; };
		combo_media: combo_media { timeout-ms = <150>; key-positions = <2 9>; bindings = <&to 2>; };
		combo_fkeys: combo_fkeys { timeout-ms = <150>; key-positions = <3 9>; bindings = <&to 3>; };
		combo_l5: combo_l5 { timeout-ms = <150>; key-positions = <4 9>; bindings = <&to 4>; };
		combo_l6: combo_l6 { timeout-ms = <150>; key-positions = <5 9>; bindings = <&to 5>; };
		combo_studio_unlock: combo_studio_unlock { timeout-ms = <150>; key-positions = <0 1>; bindings = <&studio_unlock>; };
	};
};

